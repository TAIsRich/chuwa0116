### 2. What is MVC pattern?
Model–view–controller (MVC) is a software architectural pattern commonly used for developing user interfaces that divide the related program logic into three interconnected elements. This is done to separate internal representations of information from the ways information is presented to and accepted from the user.

### 3. What is Front-Controller?
The front controller maps the incoming request to a controller. Controllers contain the business logic of the application. They also handle requests and perform marshalling/ unmarshalling. The function of the controller is to handle a user request. The incoming request may be handled in different ways like reading form data, processing it in some way, storing data in a database, or retrieving data from a web service etc. The controller places the data in the model which, simply put, is a container for the data. The controller returns the model (containing data) back to the front controller.

Front Controller is DispatcherServlet. DispatcherServlet abstracts away the following tedious and boilerplate tasks and focus on
useful business logic:
- Mapping an HTTP request to a certain processing method
- Parsing of HTTP request data and headers into data transfer objects (DTOs)or domain objects
- Model-view-controller interaction
- Generation of responses from DTOs, domain objects, etc.


### 4. What is DispatcherServlet? please decribe how it works.
In Spring, DispatcherServlet acts as the front Controller. When a request comes in Spring MVC application
- the request is first received by the DispatcherServlet
- DispatcherServlet will take the help of HandlerMapping and it will get to know the specific Controller that is associated with this request using @RequestMapping’s
- Now, the request gets transferred to its associated Controller, the Controller will process this request by executing appropriate methods and returns the ModelAndView object back to the DispatcherServlet
- The DispatcherServlet will transfer this object to ViewResolver to get the actual view page
- Finally, DispatcherServlet passes the Model object to the View page which displays the result

In developing REST services, the Controller’s request mapping methods are annotated with `@ResponseBody` annotations, so they don’t return a logical view name to DispatcherServlet, instead it writes the output directly into the HTTP response body.

### 5. What is JSP and What is ModelAndView?(please google to have a basic knowlege)
* JSP stands for Java Server Pages. It is a server side technology used for creating web application. It is used to create dynamic web content. JSP is used to insert JAVA code into HTML pages. It is an advanced version of Servlet Technology. It is a Web based technology helps us to create dynamic and platform independent web pages.
In this, Java code can be inserted in HTML/ XML pages or both.
JSP is first converted into servlet by JSP container before processing the client’s request.

* ModelAndView is a holder for both Model and View in the web MVC framework. These two classes are distinct; ModelAndView merely holds both to make it possible for a controller to return both model and view in a single return value.

The view is resolved by a ViewResolver object; the model is data stored in a Map.

### 6. Could you please google any other servlets(理解多少是多少，不要花太多时间， 知道servlet的名字就行。)
- HttpServlet
- Filter
- RequestDispatcher 

### 7. How many web server do you know? (Tomcat, Jetty, Jboss)
- Apache
- Nginx
- Microsoft IIS
- Tomcat
- Kangle
- Jetty
- JBoss
- BEA WebLogic Server
- IBM WebSphere